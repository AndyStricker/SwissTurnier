#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# Copyright Â© 2013 Andreas Stricker <andy@knitter.ch>
# 
# This file is part of Athrank.
# 
# Athrank is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import os
import sys
sys.path.append(os.getcwd())
from swissturnier.api import get_application
import web.httpserver

# --- Begin Static Middleware ---
# It seems like there's a bug with the static part. Here we reimplement
# the static part of the middleware to work around this until it's fixed.

class FixedStaticApp(web.httpserver.StaticApp):
    def __init__(self, environ, start_response):
        super(FixedStaticApp, self).__init__(environ, start_response)
        self.directory = os.getcwd()

class FixedStaticMiddleware(web.httpserver.StaticMiddleware):
    def __init__(self, app, prefix='/app/'):
        super(FixedStaticMiddleware, self).__init__(app, prefix)

    def __call__(self, environ, start_response):
        path = environ.get('PATH_INFO', '')
        path = self.normpath(path)

        if path.startswith(self.prefix):
            return FixedStaticApp(environ, start_response)
        else:
            return super(FixedStaticMiddleware, self).__call__(environ, start_response)

# --- End Static Middleware ---


if __name__ == '__main__':
    app = get_application()
    middleware = [FixedStaticMiddleware]
    app.run(*middleware)
